import * as db from '../db';import * as sockets from '../sockets';import { callServerMethod } from '../methods';const isBrowser = process.browser;export function connectStoreToServer(Store, { user_id, siteUrl, socketUrl }) {  /* ----------------------------------------------------------------------------------------------    Initialize db && sockets  ---------------------------------------------------------------------------------------------- */  Store.methods.callServerMethod = callServerMethod(siteUrl);  if (isBrowser) {  /* ----------------------------------------------------------------------------------------------    Initialize sockets  ---------------------------------------------------------------------------------------------- */    const sendJSON = sockets.initSocket({      socketUrl,      user_id,      onMessage: sockets.onMessage(Store),    });    Store.sockets = {      sendJSON,    };  /* ----------------------------------------------------------------------------------------------    Initialize db  ---------------------------------------------------------------------------------------------- */    Store.db = {      data: null, // already transformed and living free after initialization      query: db.query(Store),    };    return db.start(Store, { name: 'asyncDB', version: 1, user_id })    .then(db.hydrate(Store))    .catch(console.log);  }}
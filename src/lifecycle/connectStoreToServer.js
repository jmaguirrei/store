import * as db from '../db';import * as sockets from '../sockets';const isBrowser = process.browser;export function connectStoreToServer(Store, { user_id }) {  /* ----------------------------------------------------------------------------------------------    Initialize db && sockets (user_id required)  ---------------------------------------------------------------------------------------------- */  if (isBrowser) {  /* ----------------------------------------------------------------------------------------------    Initialize sockets (user_id required)  ---------------------------------------------------------------------------------------------- */    const { sendJSON } = sockets.initSocket(Store.config.socket, {      user_id,      onMessage: sockets.onMessage(Store),    });    Store.sockets = {      sendJSON,    };  /* ----------------------------------------------------------------------------------------------    Initialize db (user_id required)  ---------------------------------------------------------------------------------------------- */    Store.db = {      data: null, // already transformed and living free after initialization      query: db.query(Store),    };    return new Promise((resolve, reject) => {      db.start({ name: 'asyncDB', version: 1, user_id })      .then(db.hydrate(Store))      .then(resolve)      .catch(reject);    });  }}
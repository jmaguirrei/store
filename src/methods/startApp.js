import { connectStoreToServer } from '../lifecycle/connectStoreToServer';export function startApp(Store) {  return ({ appData, routes }) => {    const {      config = {},      router = {},      query = {},    } = appData;/* ------------------------------------------------------------------------------------------------  Register Service Worker------------------------------------------------------------------------------------------------ */    if (config.useServiceWorker && 'serviceWorker' in window.navigator) {      window.navigator.serviceWorker      .register('./sw.js', { scope: '/' })      .then(registration => {        console.log('Service Worker registration OK', registration);      })      .catch(error => {        console.log('Service Worker registration FAILED', error);      });      // window.navigator.serviceWorker.getRegistrations()      // .then(registrations => {      //   if (registrations.length === 0) {      //   } else {      //     console.log('Service Worker already registered');      //   }      // });    }/* ------------------------------------------------------------------------------------------------  First Render && Connect to Server data------------------------------------------------------------------------------------------------ */    const Container = routes['_root_'];    if (router.currentPage) Store.methods.set({ currentPage: router.currentPage });    if (query.user) Store.methods.set({ user_id: query.user });    connectStoreToServer(Store, { user_id: query.user, config })    .then(() => {      Store.methods.render(Container, {        router: {          pages: router.pages,          currentPage: router.currentPage,        },      }, 'root');      Store.methods.emit('MOUNTED');    });  };}
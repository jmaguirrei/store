export function syncDataToDB({ instance, items, newTimestamp }) {  let counter = 0;  return new Promise(resolve => {    if (items.length === 0) resolve({ instance, counter, newTimestamp });    const modelStore = instance.transaction([ 'model' ], 'readwrite').objectStore('model');    const requestPrevRecords = modelStore.getAll();    requestPrevRecords.onsuccess = () => {      const previousRecords = requestPrevRecords.result;      items.forEach(item => {        if (item.attrs.length > 0) {          const findRecord = previousRecords.find(rec => rec._id === item._id);          const putRequest = modelStore.put({            _id: item._id,            domain: item.domain,            attrs: findRecord ? [              ...findRecord.attrs,              ...item.attrs,            ] : item.attrs,          });          putRequest.onsuccess = () => {            counter++;            if (counter === items.length) resolve({ instance, counter, newTimestamp });          };        }      });    };  });}
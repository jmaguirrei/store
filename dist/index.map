{"version":3,"sources":["methods/get.js","methods/subscribe.js","methods/set.js","methods/setItem.js","methods/toggle.js","methods/notify.js","methods/compute.js","methods/computeAll.js","methods/emit.js","methods/registerComponent.js","methods/on.js","methods/once.js","methods/render.js","methods/check.js","methods/alertOn.js","methods/alertOff.js","methods/callServerMethod.js","db/getDataFromServer.js","db/syncDataToDB.js","db/getDBMetadata.js","db/updateDBControl.js","db/getModelData.js","db/start.js","db/hydrate.js","db/query.js","db/index.js","sockets/initSocket.js","sockets/onMessage.js","sockets/index.js","../../../../../../../../usr/local/lib/node_modules/parcel/node_modules/process/browser.js","lifecycle/connectStoreToServer.js","methods/startApp.js","methods/index.js","queue/addToQueue.js","queue/createProcesses.js","queue/processOptimistic.js","queue/processStep.js","queue/processor.js","queue/runTask.js","queue/index.js","lifecycle/createStore.js","index.js"],"names":["get","Store","registerNumber","field","methods","subscribe","objects","observables","observable","findListener","listeners","find","item","console","log","currentListeners","components","push","isPlainValue","v","includes","wasChanged","v1","v2","set","object","Object","keys","forEach","key","previousValue","previousValueClone","Array","isArray","nextValue","warn","notify","setItem","findIndex","x","id","toggle","cb","currentValue","computed","take","compute","flags","IS_MOUNTED","render","calc","values","map","computeAll","emit","eventStr","cbProps","reactions","filter","keepAlive","done","reaction","callback","currentRegisterNumber","registerComponent","componentDef","definition","instances","on","once","renderer","Comp","props","node","defaultComponent","isString","parentNode","document","getElementById","Component","check","checks","name","str","result","message","alertOn","alerts","obj","rand1000","Math","floor","random","timestamp","Date","now","_id","isVisible","timeout","setTimeout","alertOff","findAlert","callServerMethod","siteUrl","method","args","Promise","resolve","reject","xhr","window","XMLHttpRequest","open","setRequestHeader","onreadystatechange","readyState","DONE","statusCode","status","responseReturned","responseText","JSON","parse","payloadString","stringify","send","getDataFromServer","instance","user_id","lastTimestamp","localEntitiesIds","requestArgs","then","items","newTimestamp","catch","syncDataToDB","counter","length","modelStore","transaction","objectStore","requestPrevRecords","getAll","onsuccess","previousRecords","attrs","findRecord","rec","put","domain","getDBMetadata","controlStore","requestControlRecords","controlRecords","requestModelKeys","getAllKeys","onerror","updateDBControl","getModelData","requestRecords","start","version","indexedDB","mozIndexedDB","webkitIndexedDB","msIndexedDB","request","error","onupgradeneeded","e","target","model","createObjectStore","keyPath","control","getCurrentAttrs","reduce","acum","value","data","query","db","initSocket","socketUrl","onMessage","ws","WebSocket","sendJSON","onopen","isInitial","onclose","onmessage","payload","findEntity","dbValue","cachedSetTimeout","cachedClearTimeout","process","module","exports","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","call","runClearTimeout","marker","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","concat","drainQueue","len","run","Item","array","noop","nextTick","arguments","i","prototype","apply","title","browser","env","argv","versions","addListener","off","removeListener","removeAllListeners","prependListener","prependOnceListener","binding","cwd","chdir","dir","umask","isBrowser","connectStoreToServer","sockets","startApp","appData","routes","currentPage","baseUrl","baseFolder","httpPort","socketPort","isProduction","useServiceWorker","scope","registration","user","addToQueue","steps","onError","objToQueue","splice","runTask","createProcesses","actions","processes","singleAction","processOptimistic","isOK","entity","processStep","step","previousArgs","sideEffect","optimistic","resolveOptimistic","response","err","processor","promises","proceed","p","fn","res","task","createStore","undefined"],"mappings":"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","file":"index.map","sourceRoot":"../src","sourcesContent":["\r\rexport function get(Store) {\r\r  return registerNumber => field => {\r    Store.methods.subscribe(registerNumber, field);\r    return Store.objects.observables[field];\r  };\r\r}\r\r\r","\rexport function subscribe(Store) {\r\r  return (registerNumber, observable) => {\r    const findListener = Store.objects.listeners.find(item => item.observable === observable);\r    if (!findListener) return console.log(`Listener not found on observable ${observable}`);\r    const currentListeners = findListener.components;\r    const isSubscribed = currentListeners.find(item => item.registerNumber === registerNumber);\r    if (!isSubscribed) currentListeners.push({ registerNumber });\r  };\r\r}\r\r\r","\r\rconst isPlainValue = v => ([ 'string', 'number', 'boolean' ].includes(typeof v));\rconst wasChanged = (v1, v2) => (v1 !== v2);\r\rexport function set(Store) {\r\r  return object => {\r\r    if (!object) return;\r\r    Object.keys(object).forEach(key => {\r\r      const previousValue = Store.objects.observables[key];\r      const previousValueClone = Array.isArray(previousValue)\r        ? [ ...previousValue ]\r        : typeof previousValue === 'object'\r          ? { ...previousValue }\r          : previousValue;\r\r      const nextValue = typeof object[key] === 'function'\r        ? object[key](previousValueClone)\r        : object[key];\r\r      if (typeof previousValue !== typeof nextValue) {\r        console.warn(`Type does not match previous type in ${key}`);\r      } else {\r        const shouldNotify = !isPlainValue(nextValue) ||\r          (isPlainValue(nextValue) && wasChanged(previousValue, nextValue));\r        if (shouldNotify) {\r          Store.objects.observables[key] = nextValue;\r          Store.methods.notify(key);\r        }\r      }\r\r    });\r  };\r\r}\r\r","\r\r\rexport function setItem(Store) {\r\r  return (observable, item) => {\r    const findIndex = Store.objects.observables[observable].findIndex(x => x.id === item.id);\r    Store.objects.observables[observable][findIndex] = item;\r    Store.methods.notify(observable);\r  };\r\r}\r\r","\r\rexport function toggle(Store) {\r\r  return (observable, cb) => {\r    const currentValue = Store.objects.observables[observable];\r    if (typeof currentValue === 'undefined') {\r      console.warn(`Observable [${observable}] does not exists.`);\r    } else if (typeof currentValue !== 'boolean') {\r      console.warn(`Observable [${observable}] is not a boolean.`);\r    } else {\r      Store.methods.set({ [observable]: !currentValue });\r      if (cb) cb(!currentValue);\r    }\r  };\r\r}\r\r\r","\r\rexport function notify(Store) {\r\r  return observable => {\r\r    // Notify computed\r    if (observable) {\r      Object.keys(Store.objects.computed).forEach(key => {\r        const { take } = Store.objects.computed[key];\r        if (take.includes(observable)) Store.methods.compute(key);\r      });\r    }\r\r    // Notify components\r    if (Store.flags.IS_MOUNTED) Store.methods.render();\r    // const findListener = Store.objects.listeners.find(item => item.observable === observable);\r    // if (findListener && findListener.components) {\r    //   findListener.components.forEach(item => {\r    //     const { registerNumber } = item;\r    //     const componentDefinition = Store.objects.components[registerNumber];\r    //     componentDefinition.definition._render();\r    //   });\r    // }\r\r  };\r\r}\r\r","\r\rexport function compute(Store) {\r\r  return key => {\r    const { take, calc } = Store.objects.computed[key];\r    const values = take.map(field => Store.objects.observables[field]);\r    Store.objects.observables[key] = calc(...values);\r  };\r\r}\r\r","\r\rexport function computeAll(Store) {\r\r  return () => {\r    Object.keys(Store.objects.computed).forEach(key => {\r      Store.methods.compute(key);\r    });\r  };\r\r}\r\r","\r\rexport function emit(Store) {\r\r  return (eventStr, cbProps) => {\r\r    if (eventStr === 'MOUNTED') Store.flags.IS_MOUNTED = true;\r\r    const reactions = Store.objects.reactions.filter(item => {\r      if (item.keepAlive) return item.eventStr === eventStr;\r      return item.eventStr === eventStr && !item.done;\r    });\r\r    reactions.forEach(reaction => {\r      reaction.done = true;\r      reaction.callback(cbProps);\r    });\r  };\r\r}\r\r","\rlet currentRegisterNumber = 1000;\r\rexport function registerComponent(Store) {\r\r  return componentDef => {\r    currentRegisterNumber++;\r    Store.objects.components[currentRegisterNumber] = {\r      definition: componentDef,\r      instances: {},\r    };\r    return currentRegisterNumber;\r  };\r\r\r}\r\r\r","\r\rexport function on(Store) {\r\r  return (eventStr, callback) => {\r    Store.objects.reactions.push({ eventStr, callback, keepAlive: true });\r  };\r\r}\r\r","\r\rexport function once(Store) {\r\r  return (eventStr, callback) => {\r    Store.objects.reactions.push({ eventStr, callback, done: false });\r  };\r\r}\r\r","\r\rexport function render(Store, renderer) {\r\r  return (Comp, props = {}, node = 'root') => {\r\r    // console.log(\"render ------------------------------->\", Comp, props, node);\r\r    if (!Store.objects.defaultComponent) Store.objects.defaultComponent = () => Comp(props);\r    const isString = typeof node === 'string';\r    const parentNode = isString ? document.getElementById(node) : node;\r    const Component = Comp || Store.objects.defaultComponent;\r    renderer(Component(props), parentNode);\r\r  };\r\r}\r\r","\r// import _ from '/framework/belt';\r\rexport function check(Store, checks) {\r\r  return (name, str) => {\r\r    const { result, message } = checks[name](str);\r    return { result, message };\r\r  };\r\r}\r","\r\rexport function alertOn(Store, alerts) {\r\r  return (obj = {}) => {\r\r    const rand1000 = Math.floor(1000 * Math.random());\r    const timestamp = Date.now();\r    const _id = `${timestamp}--${rand1000}`;\r\r    const message = obj.name ? alerts[obj.name] : obj.name;\r\r    Store.objects.alerts.push({\r      _id,\r      ...obj,\r      message,\r      timestamp,\r      isVisible: true,\r    });\r\r    // Maybe later we are going to notify only the exact component using alerts\r    Store.methods.notify(null);\r\r    if (obj.timeout) {\r      setTimeout(() => {\r        Store.methods.alertOff({ _id });\r      }, obj.timeout);\r    }\r\r  };\r\r}\r","\rexport function alertOff(Store) {\r\r  return ({ _id }) => {\r    const findAlert = Store.objects.alerts.find(item => item._id === _id);\r\r    if (findAlert) {\r      findAlert.isVisible = false;\r      // Maybe later we are going to notify only the exact component using alerts\r      Store.methods.notify(null);\r    }\r\r  };\r\r}\r","\r\rexport function callServerMethod(siteUrl) {\r\r  return (method, args = {}) => {\r\r    // For each query string parameter sent, add it to the path\r    // const requestUrl = Object.keys(queryStringObject).reduce((acum, key, index) => {\r    //   const queryStr = `${key}=${queryStringObject[key]}`;\r    //   if (index === 0) return `${acum}?${queryStr}`;\r    //   return `${acum}&${queryStr}`;\r    // }, `${baseUrl}/${path}`);\r\r    return new Promise((resolve, reject) => {\r\r      // Form the http request as a JSON type\r      const xhr = new window.XMLHttpRequest();\r      xhr.open('POST', `${siteUrl}/api/methods`, true);\r      xhr.setRequestHeader('Content-type', 'application/json');\r\r      // For each header sent, add it to the request\r      // Object.keys(headers).forEach(key => {\r      //   xhr.setRequestHeader(key, headers[key]);\r      // });\r\r      // When the request comes back, handle the response\r      xhr.onreadystatechange = () => {\r        if (xhr.readyState === window.XMLHttpRequest.DONE) {\r\r          const statusCode = xhr.status;\r          if (![ 200, 201 ].includes(statusCode)) reject('XHR request failed');\r\r          const responseReturned = xhr.responseText;\r          resolve(JSON.parse(responseReturned));\r\r        }\r      };\r\r      // Send the payload as JSON\r      const payloadString = JSON.stringify({ method, args });\r      xhr.send(payloadString);\r\r    });\r\r  };\r\r}\r\r","\rexport function getDataFromServer(Store) {\r\r  return args => {\r\r    const {\r      instance = null,\r      user_id,\r      lastTimestamp = 0,\r      localEntitiesIds = [],\r    } = args;\r\r    const requestArgs = {\r      user_id,\r      lastTimestamp,\r      localEntitiesIds,\r    };\r\r    return new Promise((resolve, reject) => {\r\r      // Special method available ony for internal libs\r      Store.methods.callServerMethod('@server-model.getData', requestArgs)\r      .then(items => {\r        if (!items) reject('Could not get data from server');\r        const newTimestamp = Date.now();\r        resolve({ instance, items, newTimestamp });\r      })\r      .catch(reject);\r\r    });\r\r  };\r\r}\r","\r\rexport function syncDataToDB({ instance, items, newTimestamp }) {\r\r  let counter = 0;\r  return new Promise(resolve => {\r\r    if (items.length === 0) resolve({ instance, counter, newTimestamp });\r\r    const modelStore = instance.transaction([ 'model' ], 'readwrite').objectStore('model');\r    const requestPrevRecords = modelStore.getAll();\r\r    requestPrevRecords.onsuccess = () => {\r      const previousRecords = requestPrevRecords.result;\r\r      items.forEach(item => {\r\r        if (item.attrs.length > 0) {\r          const findRecord = previousRecords.find(rec => rec._id === item._id);\r          const putRequest = modelStore.put({\r            _id: item._id,\r            domain: item.domain,\r            attrs: findRecord ? [\r              ...findRecord.attrs,\r              ...item.attrs,\r            ] : item.attrs,\r          });\r\r          putRequest.onsuccess = () => {\r            counter++;\r            if (counter === items.length) resolve({ instance, counter, newTimestamp });\r          };\r        }\r\r      });\r    };\r\r  });\r\r\r}\r\r","\rexport function getDBMetadata({ instance, user_id }) {\r\r  return new Promise((resolve, reject) => {\r\r    const controlStore = instance.transaction('control').objectStore('control');\r    const requestControlRecords = controlStore.getAll();\r\r\r    requestControlRecords.onsuccess = () => {\r      const controlRecords = requestControlRecords.result || [];\r      const lastTimestamp = controlRecords.length > 0\r        ? controlRecords[controlRecords.length - 1].lastTimestamp\r        : 0;\r\r      const modelStore = instance.transaction('model').objectStore('model');\r      const requestModelKeys = modelStore.getAllKeys();\r\r      requestModelKeys.onsuccess = () => {\r        const localEntitiesIds = requestModelKeys.result || [];\r        resolve({\r          instance,\r          user_id,\r          lastTimestamp,\r          localEntitiesIds,\r        });\r      };\r\r      requestModelKeys.onerror = () => reject('Error getting Model Keys');\r\r    };\r\r    requestControlRecords.onerror = () => reject('Error getting Control Records');\r\r  });\r\r\r}\r\r","\r\rexport function updateDBControl({ instance, counter, newTimestamp }) {\r\r  return new Promise(resolve => {\r\r    const controlStore = instance.transaction([ 'control' ], 'readwrite').objectStore('control');\r\r    const putRequest = controlStore.put({\r      _id: newTimestamp,\r      lastTimestamp: newTimestamp,\r      counter,\r    });\r\r    putRequest.onsuccess = () => {\r      resolve({ instance });\r    };\r\r\r  });\r\r\r}\r\r","\r\rexport function getModelData({ instance }) {\r\r  return new Promise(resolve => {\r\r    const modelStore = instance.transaction('model').objectStore('model');\r    const requestRecords = modelStore.getAll();\r\r    requestRecords.onsuccess = () => {\r      return resolve(requestRecords.result);\r    };\r\r  });\r\r\r}\r\r","\rimport { getDataFromServer } from './getDataFromServer';\rimport { syncDataToDB } from './syncDataToDB';\rimport { getDBMetadata } from './getDBMetadata';\rimport { updateDBControl } from './updateDBControl';\rimport { getModelData } from './getModelData';\r\rexport function start(Store, { name, version, user_id }) {\r\r  const indexedDB = window.indexedDB ||\r    window.mozIndexedDB ||\r    window.webkitIndexedDB ||\r    window.msIndexedDB;\r\r  // No indexedDB, we just request all data always\r  if (!indexedDB) {\r    return new Promise((resolve, reject) => {\r      getDataFromServer({ user_id })\r      .then(({ items }) => resolve(items))\r      .catch(reject);\r    });\r  }\r\r  return new Promise((resolve, reject) => {\r\r    const request = indexedDB.open(name, version);\r    request.onsuccess = () => resolve({ instance: request.result, user_id });\r    request.onerror = () => reject(request.error);\r\r    request.onupgradeneeded = e => {\r      const instance = e.target.result;\r      instance.model = instance.createObjectStore('model', { keyPath: '_id' });\r      instance.control = instance.createObjectStore('control', { keyPath: '_id' });\r    };\r\r  })\r  .then(getDBMetadata)\r  .then(getDataFromServer(Store))\r  .then(syncDataToDB)\r  .then(updateDBControl)\r  .then(getModelData)\r  .catch(console.log);\r\r}\r\r","\r\rfunction getCurrentAttrs(attrs) {\r  return attrs.reduce((acum, item) => {\r    const { key, value, timestamp } = item;\r    /*\r      value:\r        is always what is displayed at the UI, used in calculations, etc.\r        can be in 2 status\r\r      status:\r        0: value is \"optimistic\" and has not been validated yet by the server\r        1: value coherent with the server initial load,\r        2: optimistic value that was confirmed by the server\r        3: value that came from the server through web-sockets\r\r      dbValue:\r        is the last value that was confirmed by the server\r        if null indicates that the whole record is not confirmed yet\r\r      timestamp:\r        is the timestamp that reflects the last status coming from the server\r\r    */\r    if (!acum[key]) acum[key] = { value, dbValue: value, status: 1, timestamp };\r    return {\r      ...acum,\r      [key]: timestamp > acum[key].timestamp\r        ? { value, dbValue: value, status: 1, timestamp }\r        : acum[key],\r    };\r  }, {});\r}\r\rexport function hydrate(Store) {\r\r  return data => {\r\r    if (data.length > 0) {\r\r      Store.db.data = data.reduce((acum, item) => {\r        const { _id, domain, attrs } = item;\r        if (!acum[domain]) acum[domain] = [];\r\r        return {\r          ...acum,\r          [domain]: [\r            ...acum[domain],\r            {\r              _id,\r              attrs: getCurrentAttrs(attrs),\r            },\r          ],\r        };\r\r      }, {});\r\r      // Renders the defaultComponent (Container)\r      if (Store.flags.IS_MOUNTED) Store.methods.render();\r\r    }\r\r  };\r\r}\r\r\r","\rexport function query(Store) {\r\r  return domain => {\r    if (!Store.db.data) return [];\r    return Store.db.data[domain] || [];\r  };\r\r}\r\r\r","\rexport { start } from './start';\rexport { hydrate } from './hydrate';\rexport { query } from './query';\r","\n\nexport function initSocket({ socketUrl, user_id, onMessage }) {\n\n  if (!socketUrl) {\n    console.log('SocketUrl not defined');\n    return () => undefined;\n  }\n\n  const wsSupport = 'WebSocket' in window;\n  if (!wsSupport) {\n    console.log('WebSocket not supported');\n    return () => undefined;\n  }\n\n  const ws = new window.WebSocket(socketUrl);\n\n  const sendJSON = obj => ws.send(JSON.stringify(obj));\n\n  ws.onopen = () => {\n    console.log('WebSocket opened');\n    // tell the server user_id is connected\n    if (user_id) sendJSON({ user_id, isInitial: true });\n  };\n\n  ws.onclose = x => console.log('WebSocket closed', x);\n  ws.onmessage = obj => {\n    onMessage(JSON.parse(obj.data));\n  };\n\n\n  return sendJSON;\n\n}\n\n","\n\nexport function onMessage(Store) {\n\n  return payload => {\n    const { data, isInitial } = payload;\n    if (isInitial) console.log('Socket first message --> ', payload);\n\n    if (data) {\n      const { _id, domain, attrs } = data;\n      if (!Store.db.data[domain]) Store.db.data[domain] = [];\n      const findEntity = Store.db.data[domain].find(item => item._id === _id);\n\n      if (!findEntity) {\n\n        // Create entity\n        Store.db.data[domain].push({\n          _id,\n          attrs: attrs.reduce((acum, item) => {\n            const { key, value, timestamp } = item;\n            return {\n              ...acum,\n              [key]: {\n                value,\n                dbValue: value,\n                status: 3,\n                timestamp,\n              },\n            };\n          }, {}),\n        });\n\n      } else {\n\n        // Update entity\n        attrs.forEach(item => {\n          const { key, value, timestamp } = item;\n          findEntity.attrs[key] = {\n            value,\n            dbValue: value,\n            status: 3,\n            timestamp,\n          };\n        });\n\n      }\n\n      Store.methods.render();\n\n    }\n  };\n\n}\n\n","\rexport { initSocket } from './initSocket';\rexport { onMessage } from './onMessage';\r","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","\rimport * as db from '../db';\rimport * as sockets from '../sockets';\rimport { callServerMethod } from '../methods';\r\rconst isBrowser = process.browser;\r\rexport function connectStoreToServer(Store, { user_id, siteUrl, socketUrl }) {\r\r  /* ----------------------------------------------------------------------------------------------\r    Initialize db && sockets\r  ---------------------------------------------------------------------------------------------- */\r\r  Store.methods.callServerMethod = callServerMethod(siteUrl);\r\r  if (isBrowser) {\r\r  /* ----------------------------------------------------------------------------------------------\r    Initialize sockets\r  ---------------------------------------------------------------------------------------------- */\r\r    const sendJSON = sockets.initSocket({\r      socketUrl,\r      user_id,\r      onMessage: sockets.onMessage(Store),\r    });\r\r    Store.sockets = {\r      sendJSON,\r    };\r\r  /* ----------------------------------------------------------------------------------------------\r    Initialize db\r  ---------------------------------------------------------------------------------------------- */\r\r    Store.db = {\r      data: null, // already transformed and living free after initialization\r      query: db.query(Store),\r    };\r\r    return db.start(Store, { name: 'asyncDB', version: 1, user_id })\r    .then(db.hydrate(Store))\r    .catch(console.log);\r\r  }\r\r}\r\r","\rimport { connectStoreToServer } from '../lifecycle/connectStoreToServer';\r\rexport function startApp(Store) {\r\r  return ({ appData, routes }) => {\r\r    const {\r      currentPage,\r      query,\r      baseUrl,\r      baseFolder,\r      httpPort,\r      socketPort,\r      isProduction,\r      useServiceWorker,\r    } = appData;\r\r    const siteUrl = isProduction\r      ? `https://${baseUrl}/${baseFolder}`\r      : `http://${baseUrl}:${httpPort}`;\r\r    const socketUrl = !socketPort ? null : isProduction\r      ? `wss://${baseUrl}/${baseFolder}`\r      : `http://${baseUrl}:${socketPort}`;\r\r/* ------------------------------------------------------------------------------------------------\r  Register Service Worker\r------------------------------------------------------------------------------------------------ */\r\r    if (useServiceWorker && 'serviceWorker' in window.navigator) {\r\r      window.navigator.serviceWorker\r      .register('../sw.js', { scope: '/' })\r      // .register(`./${baseFolder}/sw.js`, { scope: '/' })\r      .then(registration => {\r        console.log('Service Worker registration OK', registration);\r      })\r      .catch(error => {\r        console.log('Service Worker registration FAILED', error);\r      });\r\r\r    }\r\r\r/* ------------------------------------------------------------------------------------------------\r  First Render && Connect to Server data\r------------------------------------------------------------------------------------------------ */\r\r    const Container = routes['_root_'];\r\r    if (currentPage) Store.methods.set({ currentPage });\r    if (query.user) Store.methods.set({ user_id: query.user });\r\r\r    connectStoreToServer(Store, { user_id: query.user, siteUrl, socketUrl })\r    .then(() => {\r      Store.methods.render(Container, { currentPage }, 'root');\r      Store.methods.emit('MOUNTED');\r    });\r\r\r  };\r\r}\r","\rexport { get } from './get';\rexport { subscribe } from './subscribe';\rexport { set } from './set';\rexport { setItem } from './setItem';\rexport { toggle } from './toggle';\rexport { notify } from './notify';\rexport { compute } from './compute';\rexport { computeAll } from './computeAll';\rexport { emit } from './emit';\rexport { registerComponent } from './registerComponent';\rexport { on } from './on';\rexport { once } from './once';\rexport { render } from './render';\rexport { check } from './check';\rexport { alertOn } from './alertOn';\rexport { alertOff } from './alertOff';\rexport { callServerMethod } from './callServerMethod';\rexport { startApp } from './startApp';\r\r","\r\rexport function addToQueue(Store) {\r\r  return ({ name, steps, onError }) => {\r    const _id = Date.now();\r    const objToQueue = {\r      _id,\r      name,\r      steps,\r      done: false,\r    };\r\r    if (onError) objToQueue.onError = onError;\r    Store.process.queue.splice(0, 0, objToQueue); // ads into the first element\r    Store.process.runTask({ _id });\r\r  };\r\r}\r\r","\r\r\rexport function createProcesses(Store, actions) {\r\r  if (!actions) return () => undefined;\r\r  const processes = Object.keys(actions).reduce((acum, key) => {\r    const singleAction = actions[key];\r    /*\r      We dont want to pass the whole Store to the action, just observables\r      So, the actions consumes the Store like:\r      const { language } = Store.observables;\r    */\r    const { observables } = Store.objects;\r    return {\r      ...acum,\r      [key]: args => {\r        Store.process.addToQueue({\r          name: key,\r          ...singleAction({ observables })(args),\r        });\r      },\r    };\r  }, {});\r\r  return (name, args) => processes[name](args);\r\r\r}\r\r\r","\n\nexport function processOptimistic(Store, args) {\n\n  const { _id, domain, attrs } = args;\n\n  if (!Store.db.data[domain]) Store.db.data[domain] = [];\n  const findEntity = Store.db.data[domain].find(item => item._id === _id);\n\n  /*\n    Case 1: New Entity\n  */\n\n  if (!findEntity) {\n\n    // Create entity\n    Store.db.data[domain].push({\n      _id,\n      attrs: Object.keys(attrs).reduce((acum, key) => {\n        return {\n          ...acum,\n          [key]: {\n            value: attrs[key],\n            dbValue: null,\n            status: 0,\n            timestamp: Date.now(),\n          },\n        };\n      }, {}),\n    });\n\n  } else {\n\n  /*\n    Case 2: Existing entity, new attrs\n  */\n\n    // Update entity\n    Object.keys(attrs).forEach(key => {\n      const dbValue = attrs[key].value;\n      findEntity.attrs[key] = {\n        value: attrs[key],\n        dbValue,\n        status: 0,\n        timestamp: Date.now(),\n      };\n    });\n\n  }\n\n\n  Store.methods.render();\n\n  return isOK => {\n\n    if (!findEntity && !isOK) {\n      // New Entity + error => Remove the entity\n      Store.db.data[domain] = Store.db.data[domain].filter(item => item._id !== _id);\n\n    } else {\n      // New Entity + ok || Existing entity => Update fields\n\n      const entity = Store.db.data[domain].find(item => item._id === _id);\n\n      Object.keys(entity.attrs).forEach(key => {\n        const field = entity.attrs[key];\n        if (field.status === 0) {\n          field.status = isOK ? 2 : 1;\n          if (!isOK) field.value = field.dbValue;\n          if (isOK) field.dbValue = field.value;\n          field.timestamp = Date.now();\n        }\n      });\n\n    }\n\n    if (!isOK) Store.methods.render();\n\n  };\n\n}\n\n","\nimport { processOptimistic } from './processOptimistic';\n\nexport function processStep(Store, step, previousArgs = {}) {\n\n  const {\n    method,\n    domain,\n    args,\n    sideEffect,\n    optimistic = true,\n  } = step(previousArgs);\n\n  // Backend may return something valuable for the next step\n  if (domain === '_Backend_') {\n\n    const resolveOptimistic = optimistic\n      ? processOptimistic(Store, args)\n      : () => undefined;\n\n    return new Promise((resolve, reject) => {\n      return Store.methods.callServerMethod(method, args)\n        .then(response => {\n          const error = response.error;\n          const data = response.data;\n          resolveOptimistic(!error);\n          resolve({\n            error,\n            data: {\n              ...previousArgs.data,\n              ...data,\n            },\n          });\n        })\n        .catch(err => {\n          resolveOptimistic(false);\n          reject(err);\n        });\n    });\n  }\n\n  // Store works like simple local State\n  if (domain === '_Store_') {\n    Store.methods[method](args);\n    if (sideEffect) sideEffect();\n    return Promise.resolve(previousArgs);\n  }\n\n}\n\n","\n// import { resolveArgs } from './resolveArgs';\nimport { processStep } from './processStep';\n\nexport function processor(Store) {\n\n  return steps => {\n\n    // Promise build\n    const promises = steps.map(step => {\n\n      return previousArgs => {\n        // const args = resolveArgs(step.args, prevArgs);\n        // processStep(Store, step, args);\n        return processStep(Store, step, previousArgs);\n      };\n\n    });\n\n    // Promise execution\n    let proceed = true;\n\n    promises.reduce((p, fn) => {\n      return p\n        .then(res => {\n          if (proceed) return fn(res);\n        })\n        .catch(e => {\n          console.log('Error in Promise chain execution', e);\n          proceed = false;\n        });\n    }, Promise.resolve({}));\n\n  };\n\n}\n","\r// import _ from '/framework/belt';\r\rexport function runTask(Store) {\r\r  return ({ _id }) => {\r    const task = Store.process.queue.find(item => item._id === _id);\r    Store.process.processor(task.steps);\r    task.done = true;\r\r  };\r\r}\r\r","\rexport { addToQueue } from './addToQueue';\rexport { createProcesses } from './createProcesses';\rexport { processor } from './processor';\rexport { runTask } from './runTask';\r\r","\rimport * as methods from '../methods';\rimport * as queue from '../queue';\r\rexport function createStore(definition, renderer) {\r\r  const Store = {};\r\r  const {\r    observables = {},\r    computed = {},\r    actions = {},\r    alerts = {},\r    checks = {},\r  } = definition;\r\r  /* ----------------------------------------------------------------------------------------------\r    Initialize flags\r  ---------------------------------------------------------------------------------------------- */\r  Store.flags = {\r    IS_MOUNTED: false,\r  };\r\r  /* ----------------------------------------------------------------------------------------------\r    Initialize utils to the store for convenience.\r  ---------------------------------------------------------------------------------------------- */\r  Store.utils = {\r    hoc: null, // will be attached after ui initialization\r  };\r\r  /* ----------------------------------------------------------------------------------------------\r    Initialize observables\r  ---------------------------------------------------------------------------------------------- */\r  Store.objects = {\r    defaultComponent: null,\r    observables,\r    computed,\r    listeners: [],\r    reactions: [],\r    components: {},\r    alerts: [],\r  };\r\r  /* ----------------------------------------------------------------------------------------------\r    Initialize methods\r  ---------------------------------------------------------------------------------------------- */\r  Store.methods = {\r    check: methods.check(Store, checks),\r    get: methods.get(Store),\r    subscribe: methods.subscribe(Store),\r    set: methods.set(Store),\r    setItem: methods.setItem(Store),\r    toggle: methods.toggle(Store),\r    notify: methods.notify(Store),\r    emit: methods.emit(Store),\r    on: methods.on(Store),\r    once: methods.once(Store),\r    render: methods.render(Store, renderer),\r    compute: methods.compute(Store),\r    computeAll: methods.computeAll(Store),\r    registerComponent: methods.registerComponent(Store),\r    alertOn: methods.alertOn(Store, alerts),\r    alertOff: methods.alertOff(Store),\r    callServerMethod: () => undefined, // will be initialized on 'connectStoreToServer'\r    startApp: methods.startApp(Store),\r  };\r\r  /* ----------------------------------------------------------------------------------------------\r    Initialize queued processes\r  ---------------------------------------------------------------------------------------------- */\r  Store.process = {\r    queue: [],\r    addToQueue: queue.addToQueue(Store),\r    processor: queue.processor(Store),\r    runTask: queue.runTask(Store),\r    call: queue.createProcesses(Store, actions), // client side method call\r  };\r\r  /* ----------------------------------------------------------------------------------------------\r    Initialize listeners\r  ---------------------------------------------------------------------------------------------- */\r  Object.keys(Store.objects.observables).forEach(observable => {\r    Store.objects.listeners.push({ observable, components: [] });\r  });\r\r  /* ----------------------------------------------------------------------------------------------\r    Start with computed values up to date\r  ---------------------------------------------------------------------------------------------- */\r  Store.methods.computeAll();\r\r\r  return Store;\r\r}\r\r","\rimport { createStore } from './lifecycle/createStore';\r\rexport default createStore;\r"]}